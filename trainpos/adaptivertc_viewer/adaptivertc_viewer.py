#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module adaptivertc_viewer.py
# Autogenerated from adaptivertc_viewer.glade
# Generated on Mon Mar 10 20:16:51 2008

# Warning: Do not modify any context comment such as #--
# They are required to keep user's code

import os

import gtk
import gtkmozembed

from SimpleGladeApp import SimpleGladeApp
from SimpleGladeApp import bindtextdomain

app_name = "adaptivertc_viewer"
app_version = "0.0.1"

glade_dir = ""
locale_dir = ""

bindtextdomain(app_name, locale_dir)


class Window1(SimpleGladeApp):

    def __init__(self, path="adaptivertc_viewer.glade",
                 root="window1",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

    #-- Window1.new {
    def new(self):
        # print "A new %s has been created" % self.__class__.__name__
        pass
    #-- Window1.new }

    #-- Window1 custom methods {
    #   Write your own methods here
    #-- Window1 custom methods }

    #-- Window1.make_browser1 {
    def make_browser1(self, str1, str2, int1, int2):
        widget = gtkmozembed.MozEmbed()
        widget.load_url(str1)
        widget.show_all()
        return widget
    #-- Window1.make_browser1 }

    #-- Window1.make_browser2 {
    def make_browser2(self, str1, str2, int1, int2):
        widget = gtkmozembed.MozEmbed()
        widget.load_url(str1)
        widget.show_all()
        return widget
    #-- Window1.make_browser2 }

    #-- Window1.make_browser3 {
    def make_browser3(self, str1, str2, int1, int2):
        widget = gtkmozembed.MozEmbed()
        widget.load_url(str1)
        widget.show_all()
        return widget
    #-- Window1.make_browser3 }


#-- main {

def main():
    window1 = Window1()

    window1.run()

if __name__ == "__main__":
    main()

#-- main }
